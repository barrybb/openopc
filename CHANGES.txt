================================================================================
OpenOPC for Python 1.4.0
RELEASE NOTES

Added functionality to read only changed data (without breaking the current API).

Here's a snippet to illustrate usage:

read_type = 'CD'        # 'SR'=SyncRead, 'AR'=AsyncRefresh, 'CD'=ChangedData (new functionality)
if read_type == 'SR':
    print("\n...Initial read (sync):\n\n" + str(opc.read(taglist, group=tag_group, sync=True, include_error=True)))   # include_error=True also forces sync
elif read_type == 'AR':
    print("\n...Initial read (async/refresh):\n\n" + str(opc.read(taglist, group=tag_group, sync=False, include_error=False)))
elif read_type == 'CD':
    print("\n...Initial read (on data change):\n\n" + str(opc.read(taglist, group=tag_group, sync=False, include_error=False, update=500)))   # note: initial read performs an AsyncRefresh
else:
    print("\n\n*********** Invalid read_type ***********\n\n")
print("\n...Next reads... by group:")    
for i in range(4):
    print("\nIteration: " + str(i))
    loop = True
    while loop:
        print('')
        tag_iter = opc.iread(group=tag_group, sync=(read_type=='SR'), update=(1 if read_type=='CD' else -1))    # although true update value will be from initial group read, the update needs to be specified as greater than 0 in order to only read changed data
        loop = False
        for (name, val, qual, time) in tag_iter:
            if read_type=='CD': loop = True
            if val != None:      # val==None means data didn't change
                print(name, val, qual, time)
    pytime.sleep(2)


================================================================================
OpenOPC for Python 1.3.1
Copyright (c) 2008-2015 by Barry Barnreiter (barrybb@gmail.com)

http://openopc.sourceforge.net/


RELEASE NOTES
May 29, 2015


1. The OpenOPC Gateway Service includes a new feature that will automatically
disconnect and close OPC client sessions that have become inactive.

Two Windows system environment variables control this feature:

OPC_INACTIVE_TIMEOUT specifies the number of minutes that a client is
allowed to remain inactive before the server closes its connection.

OPC_MAX_CLIENTS specifies the maximum number of clients that are allowed
to be simulatenously connected to the server.  Once the max has been
reached additional client connection requests will not be refused.
Instead the server will automatically disconnect the client session
that's been inactive for the longest period of time in order ot make
space for the new client.

2. The OPC_GATE_HOST system enviornment variable has new features.   If you
set it equal to 0.0.0.0 then the Gateway Service will listen on all ethernet
interfaces.   But if you set it to a specific IP address then it will only
listen on that interface.   Note that on machines with multiple ethernet
interfaces it may be necessary to set this to a specific IP address
otherwise the service can fail to listen entirely.

3. New command line install script for Windows systems included in the
zip file distribution of OpenOPC.

